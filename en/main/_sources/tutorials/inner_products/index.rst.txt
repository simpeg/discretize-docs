:orphan:

Inner Products
==============

Numerical solutions to differential equations frequently make use
of the **weak formulation**. That is, we take the inner product
of each PDE with some test function. There are many different ways to
evaluate inner products numerically; i.e. trapezoidal rule, midpoint
rule, or higher-order approximations. A simple method for evaluating
inner products on a numerical grid is to apply the midpoint rule; 
which is used by the *discretize* package.

Here, we demonstrate how to approximate various classes of inner
products numerically. If this is known, the user will be capable
of properly discretizing any term in a problem specific PDE.


.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Inner products between two scalar or vector quantities represents the most basic class of inner products. For this class of inner products, we demonstrate:">

.. only:: html

  .. image:: /tutorials/inner_products/images/thumb/sphx_glr_1_basic_thumb.png
    :alt:

  :ref:`sphx_glr_tutorials_inner_products_1_basic.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Basic Inner Products</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="When solving PDEs using the finite volume approach, inner products may contain constitutive relations; examples include Ohm&#x27;s law and Hooke&#x27;s law. For this class of inner products, you will learn how to:">

.. only:: html

  .. image:: /tutorials/inner_products/images/thumb/sphx_glr_2_physical_properties_thumb.png
    :alt:

  :ref:`sphx_glr_tutorials_inner_products_2_physical_properties.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Constitutive Relations</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="When solving PDEs using the finite volume approach, inner products may contain differential operators. Where \psi and \phi are scalar quantities, and \vec{u} and \vec{v} are vector quantities, we may need to derive a discrete approximation for the following inner products:">

.. only:: html

  .. image:: /tutorials/inner_products/images/thumb/sphx_glr_3_calculus_thumb.png
    :alt:

  :ref:`sphx_glr_tutorials_inner_products_3_calculus.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Differential Operators</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this section, we demonstrate how to go from the inner product to the discrete approximation for some special cases. We also show how all necessary operators are constructed for each case.">

.. only:: html

  .. image:: /tutorials/inner_products/images/thumb/sphx_glr_4_advanced_thumb.png
    :alt:

  :ref:`sphx_glr_tutorials_inner_products_4_advanced.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Advanced Examples</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /tutorials/inner_products/1_basic
   /tutorials/inner_products/2_physical_properties
   /tutorials/inner_products/3_calculus
   /tutorials/inner_products/4_advanced


.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-gallery

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download all examples in Python source code: inner_products_python.zip </tutorials/inner_products/inner_products_python.zip>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download all examples in Jupyter notebooks: inner_products_jupyter.zip </tutorials/inner_products/inner_products_jupyter.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

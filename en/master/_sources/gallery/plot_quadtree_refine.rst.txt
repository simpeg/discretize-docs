.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_plot_quadtree_refine.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_quadtree_refine.py:


QuadTree: Creation
==================

You can give the refine method a function, which is evaluated on every
cell of the TreeMesh.

Occasionally it is useful to initially refine to a constant level
(e.g. 3 in this 32x32 mesh). This means the function is first evaluated
on an 8x8 mesh (2^3).


.. image:: /gallery/images/sphx_glr_plot_quadtree_refine_001.png
    :class: sphx-glr-single-img





.. code-block:: default

    import discretize
    import numpy as np
    import matplotlib.pyplot as plt


    def run(plotIt=True):
        M = discretize.TreeMesh([32, 32])
        M.refine(3)

        def refine(cell):
            xyz = cell.center
            for i in range(3):
                if np.abs(np.sin(xyz[0]*np.pi*2)*0.5 + 0.5 - xyz[1]) < 0.2*i:
                    return 6-i
            return 0

        M.refine(refine)
        if plotIt:
            M.plotGrid()

    if __name__ == '__main__':
        run()
        plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.158 seconds)


.. _sphx_glr_download_gallery_plot_quadtree_refine.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_quadtree_refine.py <plot_quadtree_refine.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_quadtree_refine.ipynb <plot_quadtree_refine.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
